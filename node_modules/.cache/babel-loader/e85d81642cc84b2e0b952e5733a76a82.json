{"ast":null,"code":"// import React, { useState, useEffect } from 'react'\n// // import { useDispatch} from \"react-redux\"\n// ///////////////////////////////////////////////////////////////////////////////////////////////\n// // MATERIAL UI\n// import { withStyles, makeStyles } from '@material-ui/core/styles';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Paper from '@material-ui/core/Paper';\n// const StyledTableCell = withStyles((theme) => ({\n//   head: {\n//     backgroundColor: theme.palette.common.black,\n//     color: theme.palette.common.white,\n//   },\n//   body: {\n//     fontSize: 14,\n//   },\n// }))(TableCell);\n// const StyledTableRow = withStyles((theme) => ({\n//   root: {\n//     '&:nth-of-type(odd)': {\n//       backgroundColor: theme.palette.action.hover,\n//     },\n//   },\n// }))(TableRow);\n// const useStyles = makeStyles({\n//     table: {\n//       minWidth: 400,\n//         maxWidth: 600\n//     },\n//   });\n//   ///////////////////////////////////////////////////////////////////////////////////////////////\n// const DisplayTasks = (props) => {\n//     const classes = useStyles();\n//     console.log(\"Tasks in Display Tasks component:\", props.tasks);\n//     const[updatedtasks,SetUpdatedTasks]= useState([])\n//     // var dispatch = useDispatch();\n//     useEffect((\n//       ()=>{\n//         SetUpdatedTasks(props.tasks)\n//       }\n//     ),[props])\n//     const toggleStatus = (i) => {\n//         console.log(\"Index\", i , \"is clicked\")\n//             // dispatch({\n//             //     type: \"TOGGLE\",\n//             //     payload: {\n//             //         index: i,\n//             //     },\n//             // })\n//             SetUpdatedTasks(updatedtasks.map((item,ind) => {\n//               if(i ===ind) {\n//                   return{\n//                       ...item,\n//                       status: (!item.status),\n//                   }\n//               }\n//               else return item;\n//     }\n//             ))\n//   }\n//     // return (\n//     //     <div>\n//     //         <h1>Tasks</h1>\n//     //         <table border=\"1px\" >\n//     //             <thead >\n//     //                 <tr>\n//     //                     <th>Task</th>\n//     //                     <th>Status (Completed or Not)</th>\n//     //                     <th>Toggle Status</th>\n//     //                 </tr>\n//     //             </thead>\n//     //             {tasks.map((task,index) => {\n//     //                 return (\n//     //                     <tbody>\n//     //                         <tr key={task.title}>\n//     //                             <td>{task.title}</td>\n//     //                             <td> {\"\"+task.status === \"true\" ? \"Done\" : \"Not Completed\"}</td>\n//     //                             <td> <button onClick={()=>toggleStatus(index)}> Click to toggle</button></td>\n//     //                         </tr>\n//     //                     </tbody>\n//     //                 )\n//     //             })}\n//     //         </table>\n//     //     </div>\n//     // )\n//     return (\n//         <TableContainer component={Paper} >\n//           <Table className={classes.table} aria-label=\"customized table\" style={{ width: 1000, margin: 'auto' }}>\n//             <TableHead>\n//               <TableRow>\n//                 <StyledTableCell align=\"justify\">Task</StyledTableCell>\n//                 <StyledTableCell align=\"justify\">Status</StyledTableCell>\n//                 <StyledTableCell align=\"justify\">Toggle Status</StyledTableCell>\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {updatedtasks.map((task,index) => (\n//                 <StyledTableRow key={index}>\n//                   <StyledTableCell align=\"justify\"component=\"th\" scope=\"row\"> {\"\"+task.input} </StyledTableCell>\n//                   <StyledTableCell align=\"justify\">{\"\"+task.status === \"true\" ? \"Done\" : \"Not Completed\"}</StyledTableCell>\n//                   <StyledTableCell align=\"justify\"><button onClick={()=>toggleStatus(index)}> Click to toggle</button></StyledTableCell>\n//                 </StyledTableRow>\n//               ))}\n//             </TableBody>\n//           </Table>\n//         </TableContainer>\n//       );\n// }\n// export default DisplayTasks","map":{"version":3,"sources":["/Data/Bootcamp/Taskbox/components-app/src/components/DisplayTasks.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect } from 'react'\n// // import { useDispatch} from \"react-redux\"\n\n// ///////////////////////////////////////////////////////////////////////////////////////////////\n// // MATERIAL UI\n// import { withStyles, makeStyles } from '@material-ui/core/styles';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Paper from '@material-ui/core/Paper';\n\n// const StyledTableCell = withStyles((theme) => ({\n//   head: {\n//     backgroundColor: theme.palette.common.black,\n//     color: theme.palette.common.white,\n//   },\n//   body: {\n//     fontSize: 14,\n//   },\n// }))(TableCell);\n\n// const StyledTableRow = withStyles((theme) => ({\n//   root: {\n//     '&:nth-of-type(odd)': {\n//       backgroundColor: theme.palette.action.hover,\n//     },\n//   },\n// }))(TableRow);\n\n// const useStyles = makeStyles({\n//     table: {\n//       minWidth: 400,\n//         maxWidth: 600\n\n//     },\n//   });\n\n//   ///////////////////////////////////////////////////////////////////////////////////////////////\n// const DisplayTasks = (props) => {\n//     const classes = useStyles();\n\n//     console.log(\"Tasks in Display Tasks component:\", props.tasks);\n    \n//     const[updatedtasks,SetUpdatedTasks]= useState([])\n    \n//     // var dispatch = useDispatch();\n    \n//     useEffect((\n//       ()=>{\n//         SetUpdatedTasks(props.tasks)\n//       }\n//     ),[props])\n\n//     const toggleStatus = (i) => {\n//         console.log(\"Index\", i , \"is clicked\")\n//             // dispatch({\n//             //     type: \"TOGGLE\",\n//             //     payload: {\n//             //         index: i,\n//             //     },\n//             // })\n//             SetUpdatedTasks(updatedtasks.map((item,ind) => {\n//               if(i ===ind) {\n//                   return{\n//                       ...item,\n//                       status: (!item.status),\n//                   }\n//               }\n//               else return item;\n//     }\n//             ))\n            \n//   }\n//     // return (\n//     //     <div>\n//     //         <h1>Tasks</h1>\n//     //         <table border=\"1px\" >\n//     //             <thead >\n//     //                 <tr>\n//     //                     <th>Task</th>\n//     //                     <th>Status (Completed or Not)</th>\n//     //                     <th>Toggle Status</th>\n//     //                 </tr>\n//     //             </thead>\n\n//     //             {tasks.map((task,index) => {\n\n//     //                 return (\n//     //                     <tbody>\n//     //                         <tr key={task.title}>\n//     //                             <td>{task.title}</td>\n//     //                             <td> {\"\"+task.status === \"true\" ? \"Done\" : \"Not Completed\"}</td>\n//     //                             <td> <button onClick={()=>toggleStatus(index)}> Click to toggle</button></td>\n//     //                         </tr>\n//     //                     </tbody>\n//     //                 )\n\n//     //             })}\n//     //         </table>\n\n//     //     </div>\n//     // )\n//     return (\n//         <TableContainer component={Paper} >\n//           <Table className={classes.table} aria-label=\"customized table\" style={{ width: 1000, margin: 'auto' }}>\n//             <TableHead>\n//               <TableRow>\n//                 <StyledTableCell align=\"justify\">Task</StyledTableCell>\n//                 <StyledTableCell align=\"justify\">Status</StyledTableCell>\n//                 <StyledTableCell align=\"justify\">Toggle Status</StyledTableCell>\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {updatedtasks.map((task,index) => (\n//                 <StyledTableRow key={index}>\n//                   <StyledTableCell align=\"justify\"component=\"th\" scope=\"row\"> {\"\"+task.input} </StyledTableCell>\n//                   <StyledTableCell align=\"justify\">{\"\"+task.status === \"true\" ? \"Done\" : \"Not Completed\"}</StyledTableCell>\n//                   <StyledTableCell align=\"justify\"><button onClick={()=>toggleStatus(index)}> Click to toggle</button></StyledTableCell>\n//                 </StyledTableRow>\n//               ))}\n//             </TableBody>\n//           </Table>\n//         </TableContainer>\n//       );\n// }\n\n// export default DisplayTasks\n"]},"metadata":{},"sourceType":"module"}