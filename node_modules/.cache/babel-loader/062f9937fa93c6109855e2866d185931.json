{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Data/Bootcamp/Taskbox/components-app/src/components/AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; /////MATERIAL UI //////////////////////////////////////////////////////////////////////////////////////\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    },\n    table: {\n      minWidth: 400,\n      maxWidth: 600\n    }\n  }\n}));\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow); ////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst AddTask = props => {\n  _s();\n\n  const classes = useStyles();\n  const [input, SetInput] = useState(\"\");\n  const [status, SetStatus] = useState(false); // const [tasks, SetTasks] = useState([])\n\n  const handleChange = e => {\n    // console.log(\"Event:\", e.target.value)\n    let value = e.target.value;\n    SetStatus(value);\n  };\n\n  const addTaskFunc = () => {\n    console.log(\"Text:\", input);\n    console.log(\"Status:\", status);\n    props.SetTasks(prev => prev.length !== 0 ? [...prev, {\n      input: input,\n      status: status\n    }] : [{\n      input: input,\n      status: status\n    }]); // console.log(\"Tasks array:\", tasks)\n    // return (tasks)\n  };\n\n  const toggleStatus = i => {\n    console.log(\"Index\", i, \"is clicked\");\n    props.SetTasks(props.tasks.map((item, ind) => {\n      if (i === ind) {\n        return { ...item,\n          status: !item.status\n        };\n      } else return item;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AddTask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"Enter Task\",\n      variant: \"outlined\",\n      onChange: e => SetInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"outlined-age-native-simple\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        native: true,\n        value: status,\n        onChange: e => handleChange(e),\n        label: \"Status\",\n        inputProps: {\n          name: 'status',\n          id: 'outlined-age-native-simple'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          \"aria-label\": \"None\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: true,\n          children: \"True\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: false,\n          children: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => addTaskFunc(),\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"customized table\",\n        style: {\n          width: 1000,\n          margin: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"justify\",\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"justify\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"justify\",\n              children: \"Toggle Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: props.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"justify\",\n              component: \"th\",\n              scope: \"row\",\n              children: [\" \", \"\" + task.input, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"justify\",\n              children: \"\" + task.status === \"true\" ? \"Done\" : \"Not Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"justify\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleStatus(index),\n                children: \" Click to toggle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 66\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddTask, \"JsSqinp2EQbbklJPePFOWrxq6DI=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/Data/Bootcamp/Taskbox/components-app/src/components/AddTask.js"],"names":["React","useState","makeStyles","withStyles","TextField","InputLabel","FormControl","Select","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","theme","root","margin","spacing","width","formControl","minWidth","selectEmpty","marginTop","table","maxWidth","StyledTableCell","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","action","hover","AddTask","props","classes","input","SetInput","status","SetStatus","handleChange","e","value","target","addTaskFunc","console","log","SetTasks","prev","length","toggleStatus","i","tasks","map","item","ind","name","id","task","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAGA;;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAGA,MAAMC,SAAS,GAAGd,UAAU,CAAEe,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACF,aAAS;AACLC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAELC,MAAAA,KAAK,EAAE;AAFF,KADP;AAKFC,IAAAA,WAAW,EAAE;AACTH,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADC;AAETG,MAAAA,QAAQ,EAAE;AAFD,KALX;AASFC,IAAAA,WAAW,EAAE;AACTC,MAAAA,SAAS,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd;AADF,KATX;AAYFM,IAAAA,KAAK,EAAE;AACHH,MAAAA,QAAQ,EAAE,GADP;AAEHI,MAAAA,QAAQ,EAAE;AAFP;AAZL;AAD+B,CAAZ,CAAD,CAA5B;AAqBA,MAAMC,eAAe,GAAGzB,UAAU,CAAEc,KAAD,KAAY;AAC3CY,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EAAEb,KAAK,CAACc,OAAN,CAAcC,MAAd,CAAqBC,KADpC;AAEFC,IAAAA,KAAK,EAAEjB,KAAK,CAACc,OAAN,CAAcC,MAAd,CAAqBG;AAF1B,GADqC;AAK3CC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR;AALqC,CAAZ,CAAD,CAAV,CAQpB1B,SARoB,CAAxB;AAUA,MAAM2B,cAAc,GAAGnC,UAAU,CAAEc,KAAD,KAAY;AAC1CC,EAAAA,IAAI,EAAE;AACF,0BAAsB;AAClBY,MAAAA,eAAe,EAAEb,KAAK,CAACc,OAAN,CAAcQ,MAAd,CAAqBC;AADpB;AADpB;AADoC,CAAZ,CAAD,CAAV,CAMnB1B,QANmB,CAAvB,C,CASA;;AAGA,MAAM2B,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,OAAO,GAAG3B,SAAS,EAAzB;AACA,QAAM,CAAC4B,KAAD,EAAQC,QAAR,IAAoB5C,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC6C,MAAD,EAASC,SAAT,IAAsB9C,QAAQ,CAAC,KAAD,CAApC,CAHuB,CAKvB;;AAGA,QAAM+C,YAAY,GAAIC,CAAD,IAAO;AACxB;AACA,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACAH,IAAAA,SAAS,CAACG,KAAD,CAAT;AACH,GAJD;;AAOA,QAAME,WAAW,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBV,KAArB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,MAAvB;AAGAJ,IAAAA,KAAK,CAACa,QAAN,CAAeC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CACvC,GAAGD,IADoC,EAEvC;AACIZ,MAAAA,KAAK,EAAEA,KADX;AAEIE,MAAAA,MAAM,EAAEA;AAFZ,KAFuC,CAApB,GAMnB,CAAC;AACDF,MAAAA,KAAK,EAAEA,KADN;AAEDE,MAAAA,MAAM,EAAEA;AAFP,KAAD,CANJ,EALsB,CAetB;AACA;AACH,GAjBD;;AAmBA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AACxBN,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBK,CAArB,EAAwB,YAAxB;AAEAjB,IAAAA,KAAK,CAACa,QAAN,CAAeb,KAAK,CAACkB,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC1C,UAAIJ,CAAC,KAAKI,GAAV,EAAe;AACX,eAAO,EACH,GAAGD,IADA;AAEHhB,UAAAA,MAAM,EAAG,CAACgB,IAAI,CAAChB;AAFZ,SAAP;AAIH,OALD,MAMK,OAAOgB,IAAP;AACR,KARc,CAAf;AAWH,GAdD;;AAgBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAC,YAArC;AAAkD,MAAA,OAAO,EAAC,UAA1D;AACI,MAAA,QAAQ,EAAEb,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACE,MAAF,CAASD,KAAV;AAD3B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAQI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAC,UAArB;AAAgC,MAAA,SAAS,EAAEP,OAAO,CAACrB,WAAnD;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,MAAM,MADV;AAEI,QAAA,KAAK,EAAEwB,MAFX;AAGI,QAAA,QAAQ,EAAEG,CAAC,IAAID,YAAY,CAACC,CAAD,CAH/B;AAII,QAAA,KAAK,EAAC,QAJV;AAKI,QAAA,UAAU,EAAE;AACRe,UAAAA,IAAI,EAAE,QADE;AAERC,UAAAA,EAAE,EAAE;AAFI,SALhB;AAAA,gCAUI;AAAQ,wBAAW,MAAnB;AAA0B,UAAA,KAAK,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI;AAAQ,UAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI;AAAQ,UAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eA2BI;AAAA;AAAA;AAAA;AAAA,YA3BJ,eA4BI;AAAA;AAAA;AAAA;AAAA,YA5BJ,eA8BI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAE,MAAMb,WAAW,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BJ,eAiCI;AAAA;AAAA;AAAA;AAAA,YAjCJ,oBAiCc;AAAA;AAAA;AAAA;AAAA,YAjCd,eAoCI;AAAA;AAAA;AAAA;AAAA,YApCJ,eAqCI,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAErC,KAA3B;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE4B,OAAO,CAACjB,KAA1B;AAAiC,sBAAW,kBAA5C;AAA+D,QAAA,KAAK,EAAE;AAAEL,UAAAA,KAAK,EAAE,IAAT;AAAeF,UAAAA,MAAM,EAAE;AAAvB,SAAtE;AAAA,gCACI,QAAC,SAAD;AAAA,iCACI,QAAC,QAAD;AAAA,oCACI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,SAAD;AAAA,oBACKuB,KAAK,CAACkB,KAAN,CAAYC,GAAZ,CAAgB,CAACK,IAAD,EAAOC,KAAP,kBACb,QAAC,cAAD;AAAA,oCACI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,SAAvB;AAAiC,cAAA,SAAS,EAAC,IAA3C;AAAgD,cAAA,KAAK,EAAC,KAAtD;AAAA,8BAA8D,KAAKD,IAAI,CAACtB,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,SAAvB;AAAA,wBAAkC,KAAKsB,IAAI,CAACpB,MAAV,KAAqB,MAArB,GAA8B,MAA9B,GAAuC;AAAzE;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,SAAvB;AAAA,qCAAiC;AAAQ,gBAAA,OAAO,EAAE,MAAMY,YAAY,CAACS,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4DH,CA9GD;;GAAM1B,O;UACczB,S;;;KADdyB,O;AAgHN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\n\n\n/////MATERIAL UI //////////////////////////////////////////////////////////////////////////////////////\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n        table: {\n            minWidth: 400,\n            maxWidth: 600\n\n        },\n    },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nconst AddTask = (props) => {\n    const classes = useStyles();\n    const [input, SetInput] = useState(\"\")\n    const [status, SetStatus] = useState(false)\n\n    // const [tasks, SetTasks] = useState([])\n\n\n    const handleChange = (e) => {\n        // console.log(\"Event:\", e.target.value)\n        let value = e.target.value\n        SetStatus(value)\n    }\n\n\n    const addTaskFunc = () => {\n        console.log(\"Text:\", input)\n        console.log(\"Status:\", status)\n\n\n        props.SetTasks(prev => prev.length !== 0 ? [\n            ...prev,\n            {\n                input: input,\n                status: status\n            }\n        ] : [{\n            input: input,\n            status: status\n        }])\n        // console.log(\"Tasks array:\", tasks)\n        // return (tasks)\n    }\n\n    const toggleStatus = (i) => {\n        console.log(\"Index\", i, \"is clicked\")\n\n        props.SetTasks(props.tasks.map((item, ind) => {\n            if (i === ind) {\n                return {\n                    ...item,\n                    status: (!item.status),\n                }\n            }\n            else return item;\n        }\n        ))\n\n    }\n\n    return (\n        <div>\n            <h1>AddTask</h1>\n\n            <TextField id=\"outlined-basic\" label=\"Enter Task\" variant=\"outlined\"\n                onChange={e => SetInput(e.target.value)} />\n            <br></br>\n            <br></br>\n\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Status</InputLabel>\n                <Select\n                    native\n                    value={status}\n                    onChange={e => handleChange(e)}\n                    label=\"Status\"\n                    inputProps={{\n                        name: 'status',\n                        id: 'outlined-age-native-simple',\n                    }}\n                >\n                    <option aria-label=\"None\" value=\"\" />\n                    <option value={true}>True</option>\n                    <option value={false}>False</option>\n                </Select>\n            </FormControl>\n\n\n            <br></br>\n            <br></br>\n\n            <Button variant=\"contained\" color=\"primary\" onClick={() => addTaskFunc()}>\n                Add Task\n            </Button>\n            <br></br> <br></br>\n           \n{/* //////////////// DISPLAY TASK //////////////////////////////////////////////////////////// */}\n            <hr ></hr>\n            <TableContainer component={Paper} >\n                <Table className={classes.table} aria-label=\"customized table\" style={{ width: 1000, margin: 'auto' }}>\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell align=\"justify\">Task</StyledTableCell>\n                            <StyledTableCell align=\"justify\">Status</StyledTableCell>\n                            <StyledTableCell align=\"justify\">Toggle Status</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {props.tasks.map((task, index) => (\n                            <StyledTableRow key={index}>\n                                <StyledTableCell align=\"justify\" component=\"th\" scope=\"row\"> {\"\" + task.input} </StyledTableCell>\n                                <StyledTableCell align=\"justify\">{\"\" + task.status === \"true\" ? \"Done\" : \"Not Completed\"}</StyledTableCell>\n                                <StyledTableCell align=\"justify\"><button onClick={() => toggleStatus(index)}> Click to toggle</button></StyledTableCell>\n                            </StyledTableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}\n\nexport default AddTask\n"]},"metadata":{},"sourceType":"module"}