{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Data/Bootcamp/Taskbox/components-app/src/components/AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import { useDispatch } from \"react-redux\"\n/////MATERIAL UI //////////////////////////////////////////////////////////////////////////////////////\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    },\n    table: {\n      minWidth: 400,\n      maxWidth: 600\n    }\n  }\n}));\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow); ////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst AddTask = props => {\n  _s();\n\n  // console.log(\"Props in AddTasks comp:\", props)\n  const classes = useStyles();\n  const [input, SetInput] = useState(\"\");\n  const [status, SetStatus] = useState(false);\n  const [tasks, SetTasks] = useState([]); // const dispatch = useDispatch();\n\n  const [updatedtasks, SetUpdatedTasks] = useState([]); // useEffect((() => {\n  //     console.log(\"Tasks updated:\", tasks);\n  //     props.updatedTasks(tasks);\n  //         SetUpdatedTasks(props.tasks)\n  //     // eslint-disable-next-line\n  // }), [tasks])\n\n  const handleChange = e => {\n    // console.log(\"Event:\", e.target.value)\n    let value = e.target.value;\n    SetStatus(value);\n  };\n\n  const addTaskFunc = () => {\n    console.log(\"Text:\", input);\n    console.log(\"Status:\", status); // dispatch({\n    //   type: \"ADD\",\n    //   payload: {\n    //     title: input,\n    //     status: status,\n    //   }\n    // })\n\n    SetTasks(prev => prev.length !== 0 ? [...prev, {\n      input: input,\n      status: status\n    }] : [{\n      input: input,\n      status: status\n    }]);\n    console.log(\"Tasks array:\", tasks);\n    return tasks;\n  };\n\n  const toggleStatus = i => {\n    console.log(\"Index\", i, \"is clicked\"); // dispatch({\n    //     type: \"TOGGLE\",\n    //     payload: {\n    //         index: i,\n    //     },\n    // })\n\n    SetUpdatedTasks(updatedtasks.map((item, ind) => {\n      if (i === ind) {\n        return { ...item,\n          status: !item.status\n        };\n      } else return item;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AddTask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"Enter Task\",\n      variant: \"outlined\",\n      onChange: e => SetInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"outlined-age-native-simple\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        native: true,\n        value: status,\n        onChange: e => handleChange(e),\n        label: \"Status\",\n        inputProps: {\n          name: 'status',\n          id: 'outlined-age-native-simple'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          \"aria-label\": \"None\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: true,\n          children: \"True\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: false,\n          children: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => addTaskFunc(),\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"customized table\",\n        style: {\n          width: 1000,\n          margin: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"justify\",\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"justify\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"justify\",\n              children: \"Toggle Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: updatedtasks.map((task, index) => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"justify\",\n              component: \"th\",\n              scope: \"row\",\n              children: [\" \", \"\" + task.input, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"justify\",\n              children: \"\" + task.status === \"true\" ? \"Done\" : \"Not Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"justify\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleStatus(index),\n                children: \" Click to toggle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), \");\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddTask, \"fDTgxF/koaCdDwY8fWv+BiRraZM=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddTask;\nAddTask.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddTask\"\n};\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/AddTask.js\"] = {\n    name: \"AddTask\",\n    docgenInfo: AddTask.__docgenInfo,\n    path: \"src/components/AddTask.js\"\n  };\n}","map":{"version":3,"sources":["/Data/Bootcamp/Taskbox/components-app/src/components/AddTask.js"],"names":["React","useEffect","useState","makeStyles","withStyles","TextField","InputLabel","FormControl","Select","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","theme","root","margin","spacing","width","formControl","minWidth","selectEmpty","marginTop","table","maxWidth","StyledTableCell","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","action","hover","AddTask","props","classes","input","SetInput","status","SetStatus","tasks","SetTasks","updatedtasks","SetUpdatedTasks","handleChange","e","value","target","addTaskFunc","console","log","prev","length","toggleStatus","i","map","item","ind","name","id","task","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n// import { useDispatch } from \"react-redux\"\n\n\n/////MATERIAL UI //////////////////////////////////////////////////////////////////////////////////////\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n        table: {\n            minWidth: 400,\n              maxWidth: 600\n      \n          },\n    },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n  \n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);\n  \n  \n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nconst AddTask = (props) => {\n    // console.log(\"Props in AddTasks comp:\", props)\n    const classes = useStyles();\n    const [input, SetInput] = useState(\"\")\n    const [status, SetStatus] = useState(false)\n\n    const [tasks, SetTasks] = useState([])\n    // const dispatch = useDispatch();\n    const[updatedtasks,SetUpdatedTasks]= useState([]) \n\n    // useEffect((() => {\n    //     console.log(\"Tasks updated:\", tasks);\n    //     props.updatedTasks(tasks);\n        \n    //         SetUpdatedTasks(props.tasks)\n          \n    //     // eslint-disable-next-line\n    // }), [tasks])\n\n    const handleChange = (e) => {\n        // console.log(\"Event:\", e.target.value)\n        let value = e.target.value\n        SetStatus(value)\n    }\n\n\n    const addTaskFunc = () => {\n        console.log(\"Text:\", input)\n        console.log(\"Status:\", status)\n        // dispatch({\n        //   type: \"ADD\",\n        //   payload: {\n        //     title: input,\n        //     status: status,\n        //   }\n        // })\n        SetTasks(prev => prev.length !== 0 ? [\n            ...prev,\n            {\n                input: input,\n                status: status\n            }\n        ] : [{\n            input: input,\n            status: status\n        }])\n        console.log(\"Tasks array:\", tasks)\n        return (tasks)\n    }\n\n    const toggleStatus = (i) => {\n        console.log(\"Index\", i , \"is clicked\")\n            // dispatch({\n            //     type: \"TOGGLE\",\n            //     payload: {\n            //         index: i,\n            //     },\n            // })\n            SetUpdatedTasks(updatedtasks.map((item,ind) => {\n              if(i ===ind) {\n                  return{\n                      ...item,\n                      status: (!item.status),\n                  }\n              }\n              else return item;\n    }\n            ))\n            \n  }\n\n    return (\n        <div>\n            <h1>AddTask</h1>\n\n            <TextField id=\"outlined-basic\" label=\"Enter Task\" variant=\"outlined\"\n                onChange={e => SetInput(e.target.value)} />\n            <br></br>\n\n            {/* <input type=\"text\" placeholder=\"Enter Title\" onChange={e => SetInput(e.target.value)} /> <br></br> */}\n\n            {/* <select onChange={e => handleChange(e)}>\n        <option value=\"\" > Select from below   </option>\n        <option value={true} > True   </option>\n        <option value={false} > False </option>\n      </select> */}\n            <br></br>\n\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Status</InputLabel>\n                <Select\n                    native\n                    value={status}\n                    onChange={e => handleChange(e)}\n                    label=\"Status\"\n                    inputProps={{\n                        name: 'status',\n                        id: 'outlined-age-native-simple',\n                    }}\n                >\n                    <option aria-label=\"None\" value=\"\" />\n                    <option value={true}>True</option>\n                    <option value={false}>False</option>\n                </Select>\n            </FormControl>\n\n\n            <br></br>\n            <br></br>\n\n            <Button variant=\"contained\" color=\"primary\" onClick={() => addTaskFunc()}>\n                Add Task\n      </Button>\n            <br></br>\n            <br></br>\n\n            {/* <button onClick={addTaskFunc}>Add Task</button> */}\n\n            <hr ></hr>\n            <TableContainer component={Paper} >\n          <Table className={classes.table} aria-label=\"customized table\" style={{ width: 1000, margin: 'auto' }}>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell align=\"justify\">Task</StyledTableCell>\n                <StyledTableCell align=\"justify\">Status</StyledTableCell>\n                <StyledTableCell align=\"justify\">Toggle Status</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {updatedtasks.map((task,index) => (\n                <StyledTableRow key={index}>\n                  <StyledTableCell align=\"justify\"component=\"th\" scope=\"row\"> {\"\"+task.input} </StyledTableCell>\n                  <StyledTableCell align=\"justify\">{\"\"+task.status === \"true\" ? \"Done\" : \"Not Completed\"}</StyledTableCell>\n                  <StyledTableCell align=\"justify\"><button onClick={()=>toggleStatus(index)}> Click to toggle</button></StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      );\n        </div>\n    )\n}\n\nexport default AddTask\n"]},"metadata":{},"sourceType":"module"}